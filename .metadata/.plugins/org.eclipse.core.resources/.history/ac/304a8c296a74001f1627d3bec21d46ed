package br.com.plgs.AppClientes.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.plgs.AppClientes.configuration.JwtTokenUtil;
import br.com.plgs.AppClientes.exception.ErrorResponse;
import br.com.plgs.AppClientes.model.AuthRequest;
import br.com.plgs.AppClientes.model.AuthResponse;
import br.com.plgs.AppClientes.model.UserResponse;

@RestController
public class AuthController {

    @Autowired
    private JwtTokenUtil jwtTokenUtil;
    
    @Autowired
    private AuthenticationManager authenticationManager;
    
    @PostMapping("/api/auth/login")
    public ResponseEntity<?> createToken(@RequestBody AuthRequest authRequest){
        try {
            Authentication authentication = authenticationManager.authenticate(
                    new UsernamePasswordAuthenticationToken(
                            authRequest.getUsername(), authRequest.getPassword()));
            
            String token = jwtTokenUtil.createToken(authRequest.getUsername());
            return ResponseEntity.ok(new AuthResponse(token, 3600));
            
        } catch (AuthenticationException e) {
            return ResponseEntity.status(401).body(
                new ErrorResponse("Credenciais inválidas", "Nome de usuário ou senha incorretos.")
            );
        }
    }
    
    @GetMapping("/api/auth/me")
    public ResponseEntity<?> getAuthenticatedUser() {
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        String username = authentication.getName();
        return ResponseEntity.ok(new UserResponse(username));
    }
    
}